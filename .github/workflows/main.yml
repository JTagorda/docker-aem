name: ci

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]
    env:
      GOOGLE_DRIVEID: ${{secrets.GOOGLE_DRIVEID_AEM64}}
      ORGANISATION_NAME: aemdesign
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v1
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: initialize and download files
        run: |
          export PACKAGE_PATH=$GITHUB_WORKSPACE/packages
          export JAR_PATH=$GITHUB_WORKSPACE/jar
          source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/get_config.sh)
          source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/get_version.sh)
          if [[ ! -d $PACKAGE_PATH ]]; then mkdir $PACKAGE_PATH; fi
          if [[ ! -d $JAR_PATH ]]; then mkdir $JAR_PATH; fi

          pip3 install requests

          ./scripts/gdrive.sh "download" "$GOOGLE_DRIVEID" "$JAR_PATH/aem-quickstart.jar"
          ./scripts/download.sh "$PACKAGE_PATH/01-" "${{secrets.CREDS_ADOBE}}" "-" "https://www.adobeaemcloud.com/content/companies/public/adobe/packages/cq640/servicepack/AEM-6.4.2.0/jcr%3acontent/package/file.res/AEM-6.4.2.0-6.4.2.zip"
          ./scripts/download.sh "$PACKAGE_PATH/04-" "-" "-" "https://github.com/Adobe-Consulting-Services/com.adobe.acs.bundles.twitter4j/releases/download/com.adobe.acs.bundles.twitter4j-1.0.0/com.adobe.acs.bundles.twitter4j-content-1.0.0.zip"
          ./scripts/download.sh "$PACKAGE_PATH/05-" "-" "-" "https://github.com/Adobe-Consulting-Services/acs-aem-commons/releases/download/acs-aem-commons-4.3.0/acs-aem-commons-content-4.3.0.zip"
          ./scripts/download.sh "$PACKAGE_PATH/06-" "-" "-" "https://github.com/adobe/aem-core-wcm-components/releases/download/core.wcm.components.reactor-2.5.0/core.wcm.components.all-2.5.0.zip"
          ./scripts/download.sh "$PACKAGE_PATH/07-" "-" "-" "http://repo1.maven.org/maven2/biz/netcentric/cq/tools/accesscontroltool/accesscontroltool-package/2.3.2/accesscontroltool-package-2.3.2.zip"
          ./scripts/download.sh "$PACKAGE_PATH/08-" "-" "-" "http://repo1.maven.org/maven2/biz/netcentric/cq/tools/accesscontroltool/accesscontroltool-oakindex-package/2.3.2/accesscontroltool-oakindex-package-2.3.2.zip"
          ./scripts/download.sh "$PACKAGE_PATH/09-" "${{secrets.CREDS_ADOBE}}" "-" "https://www.adobeaemcloud.com/content/companies/public/adobe/packages/cq600/component/vanityurls-components/jcr%3acontent/package/file.res/vanityurls-components-1.0.2.zip"
          ./scripts/download.sh "$PACKAGE_PATH/10-" "-" "githublatest:aemdesign-aem-core-deploy" "https://api.github.com/repos/aem-design/aemdesign-aem-core/releases/latest"
          ./scripts/download.sh "$PACKAGE_PATH/11-" "-" "githublatest:aemdesign-aem-compose" "https://api.github.com/repos/aem-design/aemdesign-aem-support/releases/latest"
          ./scripts/download.sh "$PACKAGE_PATH/12-" "-" "githublatest:aemdesign-aem-config" "https://api.github.com/repos/aem-design/aemdesign-aem-support/releases/latest"
          ./scripts/download.sh "$PACKAGE_PATH/13-" "-" "githublatest:aemdesign-aem-content" "https://api.github.com/repos/aem-design/aemdesign-aem-support/releases/latest"
          ./scripts/download.sh "$PACKAGE_PATH/14-" "-" "githublatest:aemdesign-aem-showcase" "https://api.github.com/repos/aem-design/aemdesign-aem-support/releases/latest"
          ./scripts/download.sh "$PACKAGE_PATH/15-" "-" "githublatest:aemdesign-aem-training" "https://api.github.com/repos/aem-design/aemdesign-aem-support/releases/latest"
          export DOWNLOAD_COUNT=$(find $PACKAGE_PATH -type f | wc -l)
          echo DOWNLOAD_COUNT=$DOWNLOAD_COUNT
          export PACKAGE_COUNT=13
          echo "CHECK IF WE GOT ALL OF THE PACKAGES"
          if [[ "${DOWNLOAD_COUNT}" != "${PACKAGE_COUNT}" ]]; then exit 1; fi
      - name: build docker image and upload to docker hub
        run: |
          docker build --pull -t $IMAGE:$IMAGE_VERSION .
          source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/container_verify.sh)
          echo $IMAGE:$IMAGE_VERSION
          echo "LOGIN TO HUB.DOCKER"
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          echo "PUSH HUB.DOCKER"
          docker push $IMAGE:$IMAGE_VERSION
          if [[ ${GITHUB_REF##*/} == "master" ]]; then docker tag $IMAGE:$IMAGE_VERSION $IMAGE:latest && docker push $IMAGE:latest; fi
          echo "UPDATE README IN HUB.DOCKER"
          if [[ ${GITHUB_REF##*/} == "master" ]]; then docker run --rm -v $(pwd):/data/ aemdesign/dockerhub-description "$DOCKER_USERNAME" "$DOCKER_PASSWORD" "$IMAGE"; fi
