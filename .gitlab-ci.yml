stages:
  - pre-build
  - build
#  - test
  - release
  - release-tag

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE/aem:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/aem
  CONTAINER_RELEASE_IMAGE_TAG: "6.5.0"
  JENKINS_USER: admin
  JENKINS_USER_PASSWORD: admin


get aem jar:
  stage: pre-build
  image: aemdesign/centos-java-buildpack:latest
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - aemdesign-aem/dist
    policy: push
  script:
    - git lfs install
    - mkdir -p aemdesign-aem/dist
    - git clone --depth 1 --single-branch --branch ${CONTAINER_RELEASE_IMAGE_TAG} https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/aem.design/aemdesign-operations.git
    - cp aemdesign-operations/aemdesign-aem/dist/*.* aemdesign-aem/dist/


build-docker-image:
  stage: build
  image:
    name: docker:stable
  services:
    - docker:dind
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - aemdesign-aem/dist
    policy: pull
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CONTAINER_TEST_IMAGE" .
    - docker run $CONTAINER_TEST_IMAGE ls /aem/crx-quickstart/app | grep ${CONTAINER_RELEASE_IMAGE_TAG} && exit 0 || exit 1
    - docker push "$CONTAINER_TEST_IMAGE"
#
#test:
#  stage: test
#  image: docker:stable
#  services:
#    - docker:dind
#  script:
#    - docker run $CONTAINER_TEST_IMAGE ls /aem/crx-quickstart/app | grep ${CONTAINER_RELEASE_IMAGE_TAG} && exit 0 || exit 1


publish-docker-latest:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  only:
    - master
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CONTAINER_TEST_IMAGE"
    - docker tag "$CONTAINER_TEST_IMAGE" "$CONTAINER_RELEASE_IMAGE:$CONTAINER_RELEASE_IMAGE_TAG"
    - docker push "$CONTAINER_RELEASE_IMAGE:$CONTAINER_RELEASE_IMAGE_TAG"
    - docker tag "$CONTAINER_TEST_IMAGE" "$CONTAINER_RELEASE_IMAGE:latest"
    - docker push "$CONTAINER_RELEASE_IMAGE:latest"

#publish-docker-tag:
#  stage: release-tag
#  image: docker:stable
#  services:
#    - docker:dind
#  only:
#    - tags
#  script:
#    - echo "$CI_REGISTRY_USER"
#    - echo "$CI_REGISTRY"
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#    - docker pull "$CONTAINER_TEST_IMAGE"
#    - docker tag "$CONTAINER_TEST_IMAGE" "$CONTAINER_RELEASE_IMAGE:$CI_COMMIT_REF_NAME"
#    - docker push "$CONTAINER_RELEASE_IMAGE:$CI_COMMIT_REF_NAME"
