stages:
  - pre-build
  - build
  #- test
  - release
  #- deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE/aem:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/aem:latest
  JENKINS_USER: admin
  JENKINS_USER_PASSWORD: admin


get aem jar:
  stage: pre-build
  image: aemdesign/centos-java-buildpack:latest
#  artifacts:
#    paths:
#      - aemdesign-aem/dist
#    expire_in: 1 year
  cache:
    key: aem-dist
    paths:
      - aemdesign-aem/dist
  script:
    - git lfs install
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/aem.design/aemdesign-aem.git
    - pwd
    - ls -latr
    - tree aemdesign-aem

build docker image:
  stage: build
  image:
    name: docker:stable
  services:
    - docker:dind
  cache:
    key: aem-dist
    paths:
      - aemdesign-aem/dist
    policy: pull

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker build --pull -t "$CONTAINER_TEST_IMAGE" .
    - docker push "$CONTAINER_TEST_IMAGE"
#
#test1:
#  stage: test
#  script:
#    - docker pull $CONTAINER_TEST_IMAGE
#    - docker run $CONTAINER_TEST_IMAGE /script/to/run/tests
#
#test2:
#  stage: test
#  script:
#    - docker pull $CONTAINER_TEST_IMAGE
#    - docker run $CONTAINER_TEST_IMAGE /script/to/run/another/test

release image:
  stage: release
  image: docker:stable
  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker pull "$CONTAINER_TEST_IMAGE"
    - docker tag "$CONTAINER_TEST_IMAGE" "$CONTAINER_RELEASE_IMAGE"
    - docker push "$CONTAINER_RELEASE_IMAGE"
  only:
    - master
#
#deploy:
#  stage: deploy
#  script:
#    - ./deploy.sh
#  only:
#    - master